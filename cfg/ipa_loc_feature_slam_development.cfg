#!/usr/bin/env python
#import roslib;roslib.load_manifest('ipa_loc_feature_slam_development')

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()
# SLAM
gen.add("data_association_threshold_new_feature", double_t, 0, "If the likelihood of feature-observation correspondece is below this threshold for all features, a new feature is added", 0.01, 0.00001, 5)
gen.add("min_existence_estimate_map_feature", int_t, 0, "Candidates with that value will be added to the feature list", 15, 1, 400)
gen.add("particle_count", int_t, 0, "The count of particles", 200, 1, 10000)
gen.add("max_particle_copies", int_t, 0, "Limits the number of similar copies during resampling", 10, 1, 10000)
gen.add("threshold_effective_sample_size", double_t, 0, "Resample if effective sample size is below threshold", 100, 1, 10000)
# Robot & System environment
gen.add("use_points", bool_t, 0, "Use PointLandmarks", True)
gen.add("use_lines", bool_t, 0, "Use LinesegmentLandmarks", True)
gen.add("use_corners", bool_t, 0, "Use CornerLandmarks", True)
gen.add("odo_var_factor_distance", double_t, 0, "Variance factor for the distance", 0.005, 0.00001, 1)
gen.add("odo_var_factor_orientation", double_t, 0, "Variance factor for the orientation", 0.05, 0.00001, 1)

# Files
gen.add("best_map_file_name", str_t, 0, "File name for best map", "best_slam_map")
gen.add("best_map_file_path", str_t, 0, "Path to store best map", ".")

exit(gen.generate("ipa_loc_feature_slam_development", "ipa_loc_feature_slam_development", "ipa_loc_feature_slam_development"))
